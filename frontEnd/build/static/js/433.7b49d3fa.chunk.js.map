{"version":3,"file":"static/js/433.7b49d3fa.chunk.js","mappings":"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","sources":["views/Receptionist/Billing.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { CWidgetStatsA } from '@coreui/react'\r\nimport { Button, Col, Container, Form, Modal, Row, Table } from 'react-bootstrap'\r\nimport { CButton, CCol } from '@coreui/react'\r\nimport { useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { message } from 'antd'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Billing = () => {\r\n  const [lgShow, setLgShow] = useState(false)\r\n  const [validated, setValidated] = useState(false)\r\n  const [patientForCheckUp, setPatientForCheckUp] = useState([])\r\n  const [modalPatientName, setModalPatientName] = useState('')\r\n  const [modalCheckedBy, setModalCheckedBy] = useState('')\r\n  const [modalDepartment, setModalDepartment] = useState('')\r\n\r\n  const [modeOfPayment, setModeofPayment] = useState('Cash')\r\n  const [modalPatientId, setModalPatientId] = useState('')\r\n  const [modalCheckedById, setModalCheckedById] = useState('')\r\n  const [modalFee, setModalFee] = useState(0)\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const setNameCheckedByDepartment = (patient) => {\r\n    setLgShow(true)\r\n    setModalPatientName(patient.patientName)\r\n    setModalCheckedBy(patient.doctorName)\r\n    setModalDepartment(patient.department)\r\n    setModalPatientId(patient.patientId)\r\n    setModalCheckedById(patient.doctorId)\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n\r\n    const form = e.currentTarget\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n      setValidated(true)\r\n      return\r\n    }\r\n\r\n    try {\r\n      const billData = {\r\n        patientId: modalPatientId,\r\n        patientName: modalPatientName,\r\n        doctorName: modalCheckedBy,\r\n        doctorId: modalCheckedById,\r\n        department: modalDepartment,\r\n        fee: modalFee,\r\n        paymentMode: modeOfPayment,\r\n      }\r\n      const res = await axios.post('/api/v1/receptionist/addBill', billData)\r\n      console.log('adding bill')\r\n      if (res.data.success) {\r\n        console.log(res.data.data)\r\n        message.success('Bill Added Successfully')\r\n        setLgShow(false)\r\n        setModalCheckedBy('')\r\n        setModalDepartment('')\r\n        setModalPatientId('')\r\n        setModalPatientName('')\r\n        setModalFee(0)\r\n        setModeofPayment('Cash')\r\n        navigate('/receptionist')\r\n      } else {\r\n        message.error('Something went wrong')\r\n      }\r\n    } catch (error) {\r\n      message.error('Could not add the bill')\r\n      console.log(error)\r\n    }\r\n\r\n    // Reset the validation state after submission\r\n    setValidated(false)\r\n  }\r\n\r\n  //eslint-disable-next-line\r\n  const patientCheckUp = async () => {\r\n    try {\r\n      const res = await axios.get('/api/v1/receptionist/patientForCheckUp')\r\n      console.log('fetching patient for checkup')\r\n      if (res.data.success) {\r\n        console.log(res.data.data)\r\n        setPatientForCheckUp(res.data.data)\r\n      } else {\r\n        message.error('something went wrong')\r\n      }\r\n    } catch (error) {\r\n      message.error('Could not find the Patient')\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    patientCheckUp()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Container fluid className=\"d-flex justify-content-end\">\r\n        <Modal\r\n          size=\"lg\"\r\n          show={lgShow}\r\n          onHide={() => setLgShow(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n              Add bill of <span className=\"text-success\">{modalPatientName}</span>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"container justify-content-center d-flex mt-5 w-100 \">\r\n              <Form noValidate validated={validated} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                <Row className=\"mb-3\">\r\n                  <Form.Group\r\n                    as={Col}\r\n                    className=\"col-sm-12 col-lg-6 col-xs-12 col-md-6 col-12\"\r\n                    controlId=\"formName\"\r\n                  >\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Name\"\r\n                      required\r\n                      value={modalPatientName}\r\n                      disabled\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group\r\n                    as={Col}\r\n                    className=\"col-sm-12 col-lg-6 col-xs-12 col-md-6 col-12\"\r\n                    controlId=\"formName\"\r\n                  >\r\n                    <Form.Label>Patient Id</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Name\"\r\n                      required\r\n                      value={modalPatientId}\r\n                      disabled\r\n                    />\r\n                  </Form.Group>\r\n                </Row>\r\n                <Row className=\"mb-3\">\r\n                  <Form.Group\r\n                    as={Col}\r\n                    className=\"col-sm-12 col-lg-6 col-xs-12 col-md-6 col-12\"\r\n                    controlId=\"formName\"\r\n                  >\r\n                    <Form.Label>Checked By</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Doctor Name\"\r\n                      value={modalCheckedBy}\r\n                      required\r\n                      disabled\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    className=\"col-sm-12 col-lg-6 col-xs-12 col-md-6 col-12\"\r\n                    controlId=\"formMobileNumber\"\r\n                  >\r\n                    <Form.Label>Department</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Department Name\"\r\n                      required\r\n                      disabled\r\n                      value={modalDepartment}\r\n                    />\r\n                  </Form.Group>\r\n                </Row>\r\n                <Row className=\"mb-3\">\r\n                  <Form.Group\r\n                    as={Col}\r\n                    className=\"col-sm-12 col-lg-6 col-xs-12 col-md-6 col-12\"\r\n                    controlId=\"formMobileNumber\"\r\n                  >\r\n                    <Form.Label>Fee</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"Enter Patient Fee\"\r\n                      onChange={(e) => {\r\n                        setModalFee(e.target.value)\r\n                      }}\r\n                      value={modalFee}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    className=\"col-sm-12 col-lg-6 col-xs-12 col-md-6 col-12\"\r\n                    controlId=\"formName\"\r\n                  >\r\n                    <Form.Label>Mode of Payment</Form.Label>\r\n                    <Form.Select\r\n                      aria-label=\"Mode of payment\"\r\n                      onChange={(e) => {\r\n                        setModeofPayment(e.target.value)\r\n                      }}\r\n                    >\r\n                      <option disabled>Choose</option>\r\n                      <option value=\"Cash\">Cash</option>\r\n                      <option value=\"UPI\">UPI</option>\r\n                      <option value=\"Card\">Card</option>\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n                </Row>\r\n\r\n                <Button\r\n                  variant=\"primary\"\r\n                  className=\"col-3 col-sm-12 col-lg-3 col-xs-12 col-md-3 col-12 offset-md-9\"\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </Container>\r\n      <Container\r\n        fluid\r\n        className='position-relative'\r\n      >\r\n        <Row className=\"mb-3\">\r\n          <Col className=\"col-12 col-sm-12 col-lg-8 col-md-12 \">\r\n            <Container className=\"w-100  rounded-2 col-5\" fluid>\r\n              <Table striped bordered hover responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">#</th>\r\n                    <th className=\"text-center\">Patient Name</th>\r\n                    <th className=\"text-center\">Department</th>\r\n                    <th className=\"text-center\">CheckedBy</th>\r\n                    <th className=\"text-center\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {patientForCheckUp.length > 0 ? (\r\n                    patientForCheckUp.map((patient, index) => {\r\n                      return (\r\n                        <tr key={index}>\r\n                          <td className=\"text-center\">{index + 1}</td>\r\n                          <td className=\"text-center\">{patient.patientName}</td>\r\n                          <td className=\"text-center\">{patient.department}</td>\r\n                          <td className=\"text-center\">Dr. {patient.doctorName}</td>\r\n                          <td className=\"text-center\">\r\n                            <CButton\r\n                              onClick={() => setNameCheckedByDepartment(patient)}\r\n                              color=\"primary\"\r\n                              className=\"mb-3 \"\r\n                            >\r\n                              Add Bill\r\n                            </CButton>\r\n                          </td>\r\n                        </tr>\r\n                      )\r\n                    })\r\n                  ) : (\r\n                    <tr>\r\n                      <td className=\"text-center text-danger\" colSpan={5}>\r\n                        No Patient Found\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Container>\r\n          </Col>\r\n\r\n          <CCol\r\n            style={{\r\n              position: 'fixed',\r\n              top: 90,\r\n              right: 0,\r\n              width: '25%',\r\n            }}\r\n            className=\"d-none d-sm-none d-md-none d-lg-block col-4\"\r\n          >\r\n            <CWidgetStatsA\r\n              className=\"mb-4 h-100 d-md-flex justify-content-center align-items-center d-none\"\r\n              color=\"info\"\r\n              value={\r\n                <>\r\n                  <Row\r\n                    className=\"d-flex justify-content-center align-items-center \"\r\n                    style={{\r\n                      whiteSpace: 'nowrap',\r\n                    }}\r\n                  >\r\n                    <Col>QR Code</Col>\r\n                  </Row>\r\n                  <Row className=\"d-flex justify-content-center align-items-center\">\r\n                    <img\r\n                      src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/QR_Code_Example.svg/1024px-QR_Code_Example.svg.png\"\r\n                      alt=\"qrcode\"\r\n                      style={{\r\n                        filter: 'invert(1)',\r\n                        width: '80%',\r\n                        height: '80%',\r\n                        objectFit: 'contain',\r\n                      }}\r\n                    />\r\n                    Scan And Pay\r\n                  </Row>\r\n                </>\r\n              }\r\n            />\r\n          </CCol>\r\n        </Row>{' '}\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default React.memo(Billing)\r\n"],"names":["Billing","_useState","useState","_useState2","_slicedToArray","lgShow","setLgShow","_useState3","_useState4","validated","setValidated","_useState5","_useState6","patientForCheckUp","setPatientForCheckUp","_useState7","_useState8","modalPatientName","setModalPatientName","_useState9","_useState10","modalCheckedBy","setModalCheckedBy","_useState11","_useState12","modalDepartment","setModalDepartment","_useState13","_useState14","modeOfPayment","setModeofPayment","_useState15","_useState16","modalPatientId","setModalPatientId","_useState17","_useState18","modalCheckedById","setModalCheckedById","_useState19","_useState20","modalFee","setModalFee","navigate","useNavigate","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","billData","res","wrap","_context","prev","next","preventDefault","stopPropagation","currentTarget","checkValidity","abrupt","patientId","patientName","doctorName","doctorId","department","fee","paymentMode","axios","post","sent","console","log","data","success","message","error","t0","stop","_x","apply","arguments","patientCheckUp","_ref2","_callee2","_context2","get","useEffect","_jsxs","_Fragment","children","_jsx","Container","fluid","className","Modal","size","show","onHide","Header","closeButton","Title","id","Body","Form","noValidate","onSubmit","autoComplete","Row","Group","as","Col","controlId","Label","Control","type","placeholder","required","value","disabled","onChange","target","Select","Button","variant","Table","striped","bordered","hover","responsive","length","map","patient","index","CButton","onClick","setNameCheckedByDepartment","color","colSpan","CCol","style","position","top","right","width","CWidgetStatsA","whiteSpace","src","alt","filter","height","objectFit","React"],"sourceRoot":""}