{"version":3,"file":"static/js/344.67ef28ec.chunk.js","mappings":"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","sources":["views/Admin/UpdateStaff.js","views/Admin/RemoveStaff.js","routes.js","components/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js","views/Admin/Staff.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, Container, Form, InputGroup, Row } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\nconst UpdateStaff = () => {\r\n  const [searched, setSearched] = useState(false)\r\n  const [userId, setUserId] = useState('')\r\n  const [userData, setUserData] = useState({})\r\n  const handleSearch = async (e) => {\r\n    try {\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n\r\n      const res = await axios.post('/api/v1/admin/find-staff', { userId })\r\n      if (res.data.success) {\r\n        setSearched(true)\r\n        setUserData(res.data.data)\r\n        message.success(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error(error.response.data.message)\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      <div className=\"d-flex justify-content-end\">\r\n        <Form onSubmit={handleSearch}>\r\n          <InputGroup className=\"mb-3\">\r\n            <Form.Group controlId=\"Search_ID\">\r\n              <Form.Control type=\"text\" placeholder=\"Enter Staff ID\" value={userId} onChange={(e) => setUserId(e.target.value)} />\r\n            </Form.Group>\r\n            <Button type=\"submit\" className=\"bg-info border-0\">\r\n              Search\r\n            </Button>\r\n          </InputGroup>\r\n        </Form>\r\n      </div>\r\n      <Row>\r\n        {searched && userData && userData.length > 0 ? (\r\n          userData.map((user,idx) => {\r\n            return (\r\n              <div className=\"card\" key={idx} style={{ width: '18rem' }}>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{user.name}</h5>\r\n                  <h6 className=\"card-subtitle mb-2 text-muted\">{user.role}</h6>\r\n                  <p className=\"card-text\">{user.email}</p>\r\n                  <p className=\"card-text\">{user.phone}</p>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        ) : (\r\n            null\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UpdateStaff","import React, { useState } from 'react'\r\nimport { Button, Container, Form, InputGroup, Row, Table } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\nconst RemoveStaff = () => {\r\n  const [searchedDoctor, setSearchedDoctor] = useState(false)\r\n  const [searchedReceptionist, setSearchedReceptionist] = useState(false)\r\n  const [userId, setUserId] = useState('')\r\n  const [doctorData, setDoctorData] = useState({})\r\n  const [receptionistData, setReceptionistData] = useState({})\r\n  const handleSearch = async (e) => {\r\n    try {\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n\r\n      const res = await axios.post('/api/v1/admin/find-staff', { userId })\r\n      if (res.data.success) {\r\n        if (res.data.data.uniqueId.includes('DOC')) {\r\n          console.log(res.data.data.name)\r\n          setSearchedDoctor(true)\r\n          setDoctorData(res.data.data)\r\n        }\r\n        if (res.data.data.uniqueId.includes('REC')) {\r\n          setSearchedReceptionist(true)\r\n          console.log(res.data.data.name)\r\n          setReceptionistData(res.data.data)\r\n        }\r\n        message.success(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error(error.response.data.message)\r\n    }\r\n  }\r\n  const handleRemoveRecpt = async (uniqueId) => {\r\n    try {\r\n      const res = await axios.delete('/api/v1/admin/removeReceptionist', { uniqueId })\r\n      if (res.data.success) {\r\n        message.success(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error(error.response.data.message)\r\n    }\r\n  }\r\n  const handleRemoveDoc = async (uniqueId) => {\r\n    try {\r\n      const res = await axios.delete('/api/v1/admin/removeDoctor', { uniqueId })\r\n      if (res.data.success) {\r\n        message.success(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error(error.response.data.message)\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      <div className=\"d-flex justify-content-end\">\r\n        <Form onSubmit={handleSearch}>\r\n          <InputGroup className=\"mb-3\">\r\n            <Form.Group controlId=\"Search_ID\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Staff ID\"\r\n                value={userId}\r\n                onChange={(e) => setUserId(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button type=\"submit\" className=\"bg-info border-0\">\r\n              Search\r\n            </Button>\r\n          </InputGroup>\r\n        </Form>\r\n      </div>\r\n      <Row>\r\n        {searchedDoctor && (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <div className=\"card\" style={{ width: '18rem' }}>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{doctorData.name}</h5>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">{doctorData.uniqueId}</h6>\r\n                <p className=\"card-text\">{doctorData.email}</p>\r\n                <p className=\"card-text\">Role : Doctor</p>\r\n                <p className=\"card-text\">{doctorData.mobileNumber}</p>\r\n                <p className=\"card-text\">{doctorData.address}</p>\r\n                <p className=\"card-text\">{doctorData.zip}</p>\r\n                <p className=\"card-text\">{doctorData.experience}</p>\r\n                <p className=\"card-text\">{doctorData.specialization}</p>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <Button\r\n                    className=\"btn-danger text-white\"\r\n                    onClick={() => handleRemoveDoc(doctorData.uniqueId)}\r\n                  >\r\n                    Remove Staff Member\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {searchedReceptionist && (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <div className=\"card\" style={{ width: '18rem' }}>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{receptionistData.name}</h5>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">{receptionistData.uniqueId}</h6>\r\n                <p className=\"card-text\">{receptionistData.email}</p>\r\n                <p className=\"card-text\">Role : Receptionist</p>\r\n                <p className=\"card-text\">{receptionistData.mobileNumber}</p>\r\n                <p className=\"card-text\">{receptionistData.address}</p>\r\n                <p className=\"card-text\">{receptionistData.zip}</p>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <Button\r\n                    className=\"btn-danger text-white\"\r\n                    onClick={() => handleRemoveRecpt(receptionistData.uniqueId)}\r\n                  >\r\n                    Remove Staff Member\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Row>\r\n      {/* <Row className='  '>\r\n        {\r\n          searchedReceptionist && <div className=''>\r\n            <Table responsive className='p-5 w-50'>\r\n              <tbody className='text-center'>\r\n                <tr className=''>\r\n                  <th>Name</th>\r\n                  <td>{receptionistData.name}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Unique ID</th>\r\n                  <td>{receptionistData.uniqueId}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Email</th>\r\n                  <td>{receptionistData.email}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Role</th>\r\n                  <td>Receptionist</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Mobile Number</th>\r\n                  <td>{receptionistData.mobileNumber}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Address</th>\r\n                  <td>{receptionistData.address}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Zip Code</th>\r\n                  <td>{receptionistData.zip}</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        }\r\n      </Row> */}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default RemoveStaff\r\n","import React from 'react'\nimport UpdateStaff from './views/Admin/UpdateStaff'\nimport RemoveStaff from './views/Admin/RemoveStaff'\nimport Staff from './views/Admin/Staff'\n\nconst FourOFour = React.lazy(() => import('./views/pages/page404/Page404'))\n\nconst Admin = React.lazy(() => import('./views/Admin/Index'))\nconst Patient = React.lazy(() => import('./views/Patient/Index'))\nconst Doctor = React.lazy(() => import('./views/Doctor/Index'))\nconst Receptionist = React.lazy(() => import('./views/Receptionist/Index'))\n\nconst AddNewPatient = React.lazy(() => import('./views/Receptionist/AddNewPatient'))\nconst ExistingPatient = React.lazy(() => import('./views/Receptionist/ExistingPatient'))\nconst FindPatientRecord = React.lazy(() => import('./views/Receptionist/FindPatientRecord'))\nconst UpdatePatientDetails = React.lazy(() => import('./views/Receptionist/UpdatePatientDetails'))\nconst AttachPatientReport = React.lazy(() => import('./views/Receptionist/AttachPatientReport'))\nconst Billing = React.lazy(() => import('./views/Receptionist/Billing'))\nconst ReceptionistProfile = React.lazy(() => import('./views/Receptionist/Profile'))\n\nconst PatientProfile = React.lazy(() => import('./views/Patient/Profile'))\nconst Visits = React.lazy(() => import('./views/Patient/Visits'))\nconst Bills = React.lazy(() => import('./views/Patient/Bills'))\nconst LabResults = React.lazy(() => import('./views/Patient/LabResults'))\n\nconst AddReceptionist = React.lazy(() => import('./views/Admin/AddReceptionist'))\nconst AddDoctor = React.lazy(() => import('./views/Admin/AddDoctor'))\nconst FindStaff = React.lazy(() => import('./views/Admin/FindStaff'))\nconst AdminProfile = React.lazy(() => import('./views/Admin/Profile'))\n\nconst PatientForCheckUp = React.lazy(() => import('./views/Doctor/PatientForCheckUp'))\nconst CheckupForm = React.lazy(() => import('./views/Doctor/CheckUpForm'))\n\nconst routes = [\n  { path: '/patient', exact: true, name: 'Patient', element: Patient },\n  { path: '/admin', exact: true, name: 'Admin', element: Admin },\n  { path: '/doctor', exact: true, name: 'Doctor', element: Doctor },\n  { path: '/receptionist', exact: true, name: 'Receptionist', element: Receptionist },\n\n  { path: '/patient-profile', exact: true, name: 'Profile', element: PatientProfile },\n  { path: '/patient-visits', exact: true, name: 'Visits', element: Visits },\n  { path: '/patient-bills', exact: true, name: 'Bills', element: Bills },\n  { path: '/patient-lab-results', exact: true, name: 'Lab Results', element: LabResults },\n\n  { path: '/add-new-patient', exact: true, name: 'Add a new Patient', element: AddNewPatient },\n  { path: '/add-for-checkup', exact: true, name: 'Existing Patient', element: ExistingPatient },\n  {\n    path: '/find-patient-history',\n    exact: true,\n    name: 'Find Patient History',\n    element: FindPatientRecord,\n  },\n  {\n    path: '/update-patient-data',\n    exact: true,\n    name: 'Update Patient Details',\n    element: UpdatePatientDetails,\n  },\n  {\n    path: '/attach-patient-report',\n    exact: true,\n    name: 'Attach Report of Patient',\n    element: AttachPatientReport,\n  },\n  { path: '/add-bill', exact: true, name: 'Billing', element: Billing },\n  { path: '/profile', exact: true, name: 'Profile', element: ReceptionistProfile },\n\n  { path: '/staff', exact: true, name: 'Add Doctor', element: Staff },\n  { path: '/add-doctor', exact: true, name: 'Add Doctor', element: AddDoctor },\n  { path: '/add-reciptionist', exact: true, name: 'Add Reciptionist', element: AddReceptionist },\n  { path: '/find-staff', exact: true, name: 'Find Staff Info', element: FindStaff },\n  { path: '/update-staff', exact: true, name: 'Find Staff Info', element: UpdateStaff },\n  { path: '/remove-staff', exact: true, name: 'Find Staff Info', element: RemoveStaff },\n  { path: '/admin-profile', exact: true, name: 'Find Staff Info', element: AdminProfile },\n  {\n    path: '/patients-for-checkup',\n    name: 'Patient for checkup',\n    exact: true,\n    element: PatientForCheckUp,\n  },\n  { path: '/checkup-form', name: 'Check up form', exact: true, element: CheckupForm },\n\n  { path: '/*', name: '404', element: <FourOFour /> },\n]\n\nexport default routes\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div className='ms-auto'>\n        Aman\n        <span className=\"ms-1\">&copy; 2023</span>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport {\n  CAvatar,\n  CDropdown,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport avatar8 from '../../assets/avatars/8.jpg'\nimport { cilAccountLogout } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userSlice } from '../../features/userSlice'\nimport { Button } from 'react-bootstrap'\n\nconst AppHeaderDropdown = () => {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const user = useSelector((state) => state.user.user)\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <div\n          className=\"\"\n          style={{\n            height: '40px',\n            width: '40px',\n            borderRadius: '50%',\n            backgroundColor: 'black',\n          }}\n        >\n          <img\n            style={{\n              height: '100%',\n              width: '100%',\n              objectFit: 'cover',\n            borderRadius: '50%',\n            }}\n            src={user.profilePic}\n            alt=\"U\"\n          />\n        </div>\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n        <CDropdownItem>\n          <Button\n            onClick={() => {\n              navigate('/login')\n              localStorage.clear()\n              dispatch(userSlice.actions.clearUser())\n            }}\n            className=\"btn-danger\"\n          >\n            <CIcon icon={cilAccountLogout} className=\"me-2\" />\n            Logout\n          </Button>\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { CContainer, CHeader, CHeaderBrand, CHeaderNav, CHeaderToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilMenu, cilPlus } from '@coreui/icons'\n\nimport { AppHeaderDropdown } from './header/index'\nimport { toggleSidebar } from '../features/sideBarSlice'\n\nconst AppHeader = () => {\n  const user = useSelector((state) => state.user.user)\n  const dispatch = useDispatch()\n\n  return (\n    <CHeader\n      position=\"sticky\"\n      className=\"mb-4\"\n      style={{\n        zIndex: 1,\n      }}\n    >\n      <CContainer fluid>\n        <CHeaderToggler className=\"ps-1\" onClick={() => dispatch(toggleSidebar())}>\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none d-flex\" to=\"/\">\n          <h3>Aman</h3>\n          <CIcon icon={cilPlus} className=\"text-success\" color=\"success\" size=\"lg\" />\n        </CHeaderBrand>\n        <CHeaderNav className=\" \"></CHeaderNav>\n        <CHeaderNav className=\"ms-3 d-flex align-items-center\">\n          <span className=\"bg-black text-white rounded-2 p-2\">{user && user.uniqueId}</span>\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\nimport { useSelector } from 'react-redux'\n\nexport const AppSidebarNav = ({ items }) => {\n  const user = useSelector((state) => state.user.user)\n  const location = useLocation()\n\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const userRole = user && user.role  ? user.role : 'patient' // Replace with 'receptionist' or 'patient' based on the user's type\n\n  // Filter the navigation items based on the user type\n  const filteredNav = items.filter((item) => {\n    if (userRole === 'receptionist') {\n      return item.isReceptionist\n    } else if (userRole === 'patient') {\n      return item.isPatient\n    } else if (userRole === 'admin') {\n      return item.isAdmin\n    } else if (userRole === 'doctor') {\n      return item.isDoctor\n    }\n    // Add more conditions for other user types if needed\n    return true // Include items that don't have specific type restrictions\n  })\n\n\n\n   const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n\n  const renderNavGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    const isActive = location.pathname.startsWith(to)\n\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={isActive}\n        {...rest}\n      >\n        {item.items?.map(\n          (nestedItem, nestedIndex) =>\n            nestedItem.items\n              ? renderNavGroup(nestedItem, nestedIndex) // Recursively render nested groups\n              : navItem(nestedItem, nestedIndex), // Render nested items\n        )}\n      </Component>\n    )\n  }\n\n  // ...\n\n  const renderedNav = filteredNav.map((item, index) => {\n    if (item.items) {\n      return renderNavGroup(item, index)\n    } else {\n      return navItem(item, index)\n    }\n  })\n\n  return <React.Fragment>{(items && items.items && renderNavGroup) || renderedNav}</React.Fragment>\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilApplicationsSettings,\n  cilCalendar,\n  cilCloudUpload,\n  cilDelete,\n  cilDescription,\n  cilDollar,\n  cilHome,\n  cilMagnifyingGlass,\n  cilPeople,\n  cilUser,\n  cilUserPlus,\n} from '@coreui/icons'\nimport { CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Home',\n    to: '/receptionist',\n    icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Home',\n    to: '/doctor',\n    icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n    isDoctor: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Patients for Checkup',\n    to: '/patients-for-checkup',\n    icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n    isDoctor: true,\n  },\n\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/admin',\n    icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n    isAdmin: true,\n  },\n\n  {\n    component: CNavTitle,\n    name: 'Staff Management',\n    isAdmin: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Staff',\n    to: '/staff',\n    icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n    isAdmin: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Add Doctor',\n    to: '/add-doctor',\n    icon: <CIcon icon={cilUserPlus} customClassName=\"nav-icon\" />,\n    isAdmin: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Add Reciptionist',\n    to: '/add-reciptionist',\n    icon: <CIcon icon={cilUserPlus} customClassName=\"nav-icon\" />,\n    isAdmin: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Search Staff Info.',\n    to: '/find-staff',\n    icon: <CIcon icon={cilMagnifyingGlass} customClassName=\"nav-icon\" />,\n    isAdmin: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Update Staff Info.',\n    to: '/update-staff',\n    icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n    isAdmin: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Remove Staff',\n    to: '/remove-staff',\n    icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n    isAdmin: true,\n  },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Profile Management',\n  //   isAdmin: true,\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Profile ',\n  //   to: '/admin-profile',\n  //   icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n  //   isAdmin: true,\n  // },\n  {\n    component: CNavItem,\n    name: 'Home',\n    to: '/patient',\n    icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n    isPatient: true,\n  },\n\n  {\n    component: CNavItem,\n    name: 'Add New Patient',\n    to: '/add-new-patient',\n    icon: <CIcon icon={cilUserPlus} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Add for Checkup',\n    to: '/add-for-checkup',\n    icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Find Patient History',\n    to: '/find-patient-history',\n    icon: <CIcon icon={cilDescription} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n    isDoctor: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Update Patient Details',\n    to: '/update-patient-data',\n    icon: <CIcon icon={cilCloudUpload} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Attach Report of Patient',\n    to: '/attach-patient-report',\n    icon: <CIcon icon={cilApplicationsSettings} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Billing',\n    to: '/add-bill',\n    icon: <CIcon icon={cilDollar} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Profile',\n    to: '/profile',\n    icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n    isDoctor: true,\n  },\n\n  {\n    component: CNavItem,\n    name: 'Visits',\n    to: '/patient-visits',\n    icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n    isPatient: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Bills',\n    to: '/patient-bills',\n    icon: <CIcon icon={cilDollar} customClassName=\"nav-icon\" />,\n    isPatient: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Lab Results',\n    to: '/patient-lab-results',\n    icon: <CIcon icon={cilDescription} customClassName=\"nav-icon\" />,\n    isPatient: true,\n  },\n\n  {\n    component: CNavItem,\n    name: 'Profile',\n    to: '/patient-profile',\n    icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n    isPatient: true,\n  },\n]\n\nexport default _nav\n\n// {\n//   component: CNavGroup,\n//   name: 'Base',\n//   to: '/base',\n//   icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n//   items: [\n//     {\n//       component: CNavItem,\n//       name: 'Accordion',\n//       to: '/base/accordion',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Breadcrumb',\n//       to: '/base/breadcrumbs',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Cards',\n//       to: '/base/cards',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Carousel',\n//       to: '/base/carousels',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Collapse',\n//       to: '/base/collapses',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'List group',\n//       to: '/base/list-groups',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Navs & Tabs',\n//       to: '/base/navs',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Pagination',\n//       to: '/base/paginations',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Placeholders',\n//       to: '/base/placeholders',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Popovers',\n//       to: '/base/popovers',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Progress',\n//       to: '/base/progress',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Spinners',\n//       to: '/base/spinners',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Tables',\n//       to: '/base/tables',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Tooltips',\n//       to: '/base/tooltips',\n//     },\n//   ],\n// },\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { toggleSidebar } from '../features/sideBarSlice'\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\nimport CIcon from '@coreui/icons-react'\nimport { cilPlus } from '@coreui/icons'\n\nconst AppSidebar = () => {\n  const sidebarVisible = useSelector((state) => state.sidebar.sidebarVisible)\n  const dispatch = useDispatch()\n\n  return (\n    <CSidebar position=\"fixed\" className=\"w-20\" visible={sidebarVisible}>\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        <h3>Aman</h3>\n        <sup>\n          <CIcon icon={cilPlus} className=\"text-success\" size=\"lg\" />\n        </sup>\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport ProtectedRoutes from '../components/ProtectedRoutes'\n\nconst DefaultLayout = () => {\n  return (\n    <>\n      <ProtectedRoutes>\n        <div>\n          <AppSidebar />\n          <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n            <AppHeader />\n            <div className=\"body flex-grow-1 px-3\">\n              <AppContent />\n            </div>\n            <AppFooter />\n          </div>\n        </div>\n      </ProtectedRoutes>\n    </>\n  )\n}\n\nexport default DefaultLayout\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Card, Table } from 'react-bootstrap'\r\n\r\nconst Staff = () => {\r\n  const [receptionists, setReceptionists] = useState([])\r\n  const [doctors, setDoctors] = useState([])\r\n  const getReceptionst = async () => {\r\n    try {\r\n      const res = await axios.get('/api/v1/admin/getAllReceptionists')\r\n      if (res.data.success) {\r\n        setReceptionists(res.data.data)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  const getDoctors = async () => {\r\n    try {\r\n      const res = await axios.get('/api/v1/admin/getAllDoctors')\r\n      if (res.data.success) {\r\n        setDoctors(res.data.data)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getReceptionst()\r\n    getDoctors()\r\n  }, [])\r\n  return (\r\n    <>\r\n      <div className=\"d-md-flex \">\r\n        <div className=\"col-12 col-md-6\">\r\n          <Card>\r\n            <Card.Header>Doctors</Card.Header>\r\n            <Card.Body>\r\n              <Table responsive>\r\n                <thead>\r\n                  <tr className=\"text-center\">\r\n                    <th>Sn</th>\r\n                    <th>Name</th>\r\n                    <th>Unique Id</th>\r\n                    <th>Specialization</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {doctors && doctors.length > 0 ? (\r\n                    doctors.map((doctor, idx) => {\r\n                      return (\r\n                        <tr className=\"text-center\" key={idx}>\r\n                          <td>{idx + 1}</td>\r\n                          <td>{doctor.name}</td>\r\n                          <td>{doctor.uniqueId}</td>\r\n                          <td>{doctor.specialization}</td>\r\n                        </tr>\r\n                      )\r\n                    })\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"4\" className=\"text-center\">\r\n                        No Doctors Found\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-12 col-md-6 mt-3 mt-md-0 ms-md-2\">\r\n          <Card>\r\n            <Card.Header>Receptionists</Card.Header>\r\n            <Card.Body>\r\n              <Table responsive>\r\n                <thead>\r\n                  <tr className=\"text-center\">\r\n                    <th>Sn</th>\r\n                    <th>Name</th>\r\n                    <th>Unique Id</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {receptionists && receptionists.length > 0 ? (\r\n                    receptionists.map((receptionist, idx) => {\r\n                      return (\r\n                        <tr className=\"text-center\" key={idx}>\r\n                          <td>{idx + 1}</td>\r\n                          <td>{receptionist.name}</td>\r\n                          <td>{receptionist.uniqueId}</td>\r\n                        </tr>\r\n                      )\r\n                    })\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"4\" className=\"text-center\">\r\n                        No Receptionist Found\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Staff\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","searched","setSearched","_useState3","_useState4","userId","setUserId","_useState5","_useState6","userData","setUserData","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","res","wrap","_context","prev","next","preventDefault","stopPropagation","axios","post","sent","data","success","message","t0","console","log","error","response","stop","_x","apply","arguments","_jsxs","Container","children","_jsx","className","Form","onSubmit","InputGroup","Group","controlId","Control","type","placeholder","value","onChange","target","Button","Row","length","map","user","idx","style","width","name","role","email","phone","searchedDoctor","setSearchedDoctor","searchedReceptionist","setSearchedReceptionist","_useState7","_useState8","doctorData","setDoctorData","_useState9","_useState10","receptionistData","setReceptionistData","uniqueId","includes","handleRemoveRecpt","_ref2","_callee2","_context2","delete","_x2","handleRemoveDoc","_ref3","_callee3","_context3","_x3","mobileNumber","address","zip","experience","specialization","onClick","FourOFour","React","Admin","Patient","Doctor","Receptionist","AddNewPatient","ExistingPatient","FindPatientRecord","UpdatePatientDetails","AttachPatientReport","Billing","ReceptionistProfile","PatientProfile","Visits","Bills","LabResults","AddReceptionist","AddDoctor","FindStaff","AdminProfile","PatientForCheckUp","CheckupForm","path","exact","element","Staff","UpdateStaff","RemoveStaff","AppContent","CContainer","lg","Suspense","fallback","CSpinner","color","Routes","routes","route","Route","Navigate","to","replace","AppFooter","CFooter","navigate","useNavigate","dispatch","useDispatch","useSelector","state","CDropdown","variant","CDropdownToggle","placement","caret","height","borderRadius","backgroundColor","objectFit","src","profilePic","alt","CDropdownMenu","CDropdownHeader","CDropdownItem","localStorage","clear","userSlice","actions","clearUser","CIcon","icon","cilAccountLogout","CHeader","position","zIndex","fluid","CHeaderToggler","toggleSidebar","cilMenu","size","CHeaderBrand","cilPlus","CHeaderNav","AppHeaderDropdown","AppSidebarNav","items","location","useLocation","navLink","badge","_Fragment","CBadge","text","userRole","filteredNav","filter","item","isReceptionist","isPatient","isAdmin","isDoctor","navItem","index","component","rest","_objectWithoutProperties","_excluded","Component","_createElement","_objectSpread","NavLink","key","renderNavGroup","_item$items","_excluded2","isActive","pathname","startsWith","String","toggler","visible","nestedItem","nestedIndex","renderedNav","CNavItem","cilHome","customClassName","cilUser","CNavTitle","cilPeople","cilUserPlus","cilMagnifyingGlass","cilDescription","cilCloudUpload","cilApplicationsSettings","cilDollar","cilCalendar","AppSidebar","sidebarVisible","sidebar","CSidebar","CSidebarBrand","CSidebarNav","SimpleBar","navigation","ProtectedRoutes","AppHeader","receptionists","setReceptionists","doctors","setDoctors","getReceptionst","get","getDoctors","useEffect","Card","Header","Body","Table","responsive","doctor","colSpan","receptionist"],"sourceRoot":""}