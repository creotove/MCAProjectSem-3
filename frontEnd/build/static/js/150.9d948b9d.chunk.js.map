{"version":3,"file":"static/js/150.9d948b9d.chunk.js","mappings":"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","sources":["views/Receptionist/UpdatePatientDetails.js"],"sourcesContent":["import React from 'react'\r\nimport { message } from 'antd'\r\nimport axios from 'axios'\r\nimport { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\nconst UpdatePatientDetails = () => {\r\n  const [name, setName] = useState('')\r\n  const [uniqueId, setUniqueId] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [gender, setGender] = useState('')\r\n  const [age, setAge] = useState('')\r\n  const [mobileNumber, setMobileNumber] = useState('')\r\n  const [bloodGroup, setBloodGroup] = useState('A b postive')\r\n  const [address, setAddress] = useState('')\r\n  const [zip, setZip] = useState('')\r\n\r\n  const [searchMobileNumber, setSearchMobileNumber] = useState('')\r\n\r\n  const [validated, setValidated] = useState(false)\r\n\r\n  const getAllDataOfPatient = async (e) => {\r\n    try {\r\n      const res = await axios.post('/api/v1/receptionist/getAllPatientData', {\r\n        searchMobileNumber,\r\n      })\r\n      if (res.data.success) {\r\n        setName(res.data.data.name)\r\n        setUniqueId(res.data.data.uniqueId)\r\n        setEmail(res.data.data.email)\r\n        setGender(res.data.data.gender)\r\n        setAge(res.data.data.age)\r\n        setMobileNumber(res.data.data.mobileNumber)\r\n        setBloodGroup(res.data.data.bloodGroup)\r\n        setAddress(res.data.data.address)\r\n        setZip(res.data.data.zip)\r\n        message.success('Patient Details Fetched Successfully')\r\n      } else {\r\n        message.error('something went wrong')\r\n      }\r\n    } catch (error) {\r\n      message.error(error.response.data.message)\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    try {\r\n      const form = e.currentTarget\r\n      if (form.checkValidity() === false) {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        setValidated(true)\r\n        return\r\n      }\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n      const formData = {\r\n        name,\r\n        email,\r\n        mobileNumber,\r\n        age,\r\n        gender,\r\n        bloodGroup,\r\n        address,\r\n        zip,\r\n      }\r\n      console.log(formData)\r\n      const res = await axios.patch('/api/v1/receptionist/updatePatient', formData)\r\n      if (res.data.success) {\r\n        message.success('Patient Updated successfully')\r\n        setName('')\r\n        setUniqueId('')\r\n        setEmail('')\r\n        setGender('Male')\r\n        setAge('')\r\n        setMobileNumber('')\r\n        setBloodGroup('A b postive')\r\n        setAddress('')\r\n        setZip('')\r\n      } else {\r\n        message.error(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      message.error('Error in updating Patient')\r\n      console.log(error)\r\n    }\r\n    e.preventDefault()\r\n  }\r\n  return (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Form\r\n          id=\"searchPatient\"\r\n          name=\"searchPatient\"\r\n          autoComplete=\"false\"\r\n          onSubmit={getAllDataOfPatient}\r\n        >\r\n          <Row className=\"mb-3\">\r\n            <Form.Group\r\n              as={Col}\r\n              className=\"d-flex offset-md-7 col-md-5 col-sm-12 col-sm-12\"\r\n              controlId=\"formGridEmail\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => setSearchMobileNumber(e.target.value)}\r\n                value={searchMobileNumber}\r\n                className=\"me-2\"\r\n                placeholder=\"Patient Mobile Number\"\r\n              />\r\n              <Button onClick={getAllDataOfPatient}>Search</Button>\r\n            </Form.Group>\r\n          </Row>\r\n        </Form>\r\n      </Row>\r\n\r\n      <div className=\"container justify-content-center d-flex mt-5 w-100 \">\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Row className=\"mb-3\">\r\n            <Form.Group\r\n              as={Col}\r\n              className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n              controlId=\"formFirstName\"\r\n            >\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                onChange={(e) => {\r\n                  setName(e.target.value)\r\n                  // setEmail(`${firstName}${mobileNumber}@hms`)\r\n                }}\r\n                value={name}\r\n                required\r\n              />\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              as={Col}\r\n              className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n              controlId=\"formMobileNumber\"\r\n            >\r\n              <Form.Label>Mobile Number</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={mobileNumber}\r\n                required\r\n                disabled\r\n              />\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              as={Col}\r\n              className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n              controlId=\"formGender\"\r\n            >\r\n              <Form.Label>Gender</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={gender}\r\n                required\r\n                disabled\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n\r\n          <Row className=\"mb-3\">\r\n            <Form.Group\r\n              as={Col}\r\n              className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n              controlId=\"formAge\"\r\n            >\r\n              <Form.Label>Age</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Age\"\r\n                onChange={(e) => setAge(e.target.value)}\r\n                value={age}\r\n                required\r\n              />\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              as={Col}\r\n              className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n              controlId=\"formLastName\"\r\n            >\r\n              <Form.Label>Unique Id</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"disabled\"\r\n                value={uniqueId}\r\n                disabled\r\n                required\r\n              />\r\n              {/* <Form.Control type=\"text\" placeholder=\"Enter Last Name\" value={email} required /> */}\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              as={Col}\r\n              className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n              controlId=\"formBloodGroup\"\r\n            >\r\n              <Form.Label>Blood Group</Form.Label>\r\n              <Form.Select\r\n                onChange={(e) => setBloodGroup(e.target.value)}\r\n                value={bloodGroup}\r\n                required\r\n              >\r\n                <option>A b postive</option>\r\n                <option>A b negative</option>\r\n                <option>B postive</option>\r\n                <option>B Negative</option>\r\n                <option>ABO Blood Group System</option>\r\n                <option>Blood Group O</option>\r\n                <option>Blood Group A</option>\r\n                <option>Blood Group A b</option>\r\n                <option>O Negative</option>\r\n                <option>O Positive</option>\r\n              </Form.Select>\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Row>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n            <Form.Label>Address</Form.Label>\r\n            <Form.Control\r\n              placeholder=\"Enter Address Eg. 1234 Main St\"\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              value={address}\r\n              required\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Row className=\"mb-3\">\r\n            <Form.Group\r\n              as={Col}\r\n              controlId=\"formGridZip\"\r\n              className=\"col-4 col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n            >\r\n              <Form.Label>Zip</Form.Label>\r\n              <Form.Control\r\n                onChange={(e) => setZip(e.target.value)}\r\n                value={zip}\r\n                required\r\n                placeholder=\"Enter Zip\"\r\n              />\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              as={Col}\r\n              controlId=\"emailId\"\r\n              className=\"col-4 col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n            >\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value={email}\r\n                required\r\n                placeholder=\"Enter Email\"\r\n              />\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Row>\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"col-3 col-sm-12 col-lg-3 col-xs-12 col-md-3 col-12 offset-md-9\"\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default UpdatePatientDetails\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","uniqueId","setUniqueId","_useState5","_useState6","email","setEmail","_useState7","_useState8","gender","setGender","_useState9","_useState10","age","setAge","_useState11","_useState12","mobileNumber","setMobileNumber","_useState13","_useState14","bloodGroup","setBloodGroup","_useState15","_useState16","address","setAddress","_useState17","_useState18","zip","setZip","_useState19","_useState20","searchMobileNumber","setSearchMobileNumber","_useState21","_useState22","validated","setValidated","getAllDataOfPatient","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","res","wrap","_context","prev","next","axios","post","sent","data","success","message","error","t0","response","console","log","stop","_x","apply","arguments","handleSubmit","_ref2","_callee2","formData","_context2","currentTarget","checkValidity","preventDefault","stopPropagation","abrupt","patch","_x2","_jsxs","_Fragment","children","_jsx","Row","className","Form","id","autoComplete","onSubmit","Group","as","Col","controlId","Control","type","onChange","target","value","placeholder","Button","onClick","noValidate","Label","required","Feedback","disabled","Select","variant"],"sourceRoot":""}