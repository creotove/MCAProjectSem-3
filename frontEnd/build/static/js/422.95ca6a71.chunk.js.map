{"version":3,"file":"static/js/422.95ca6a71.chunk.js","mappings":"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","sources":["views/Doctor/CheckUpForm.js"],"sourcesContent":["import { message } from 'antd'\r\nimport axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport AbstractModalHeader from 'react-bootstrap/esm/AbstractModalHeader'\r\nimport { useSelector } from 'react-redux'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nconst CheckForm = () => {\r\n  const doctor = useSelector((state) => state.loggedInRoleUserData.loggedInRoleUserData)\r\n  const location = useLocation()\r\n  const { patientData } = location.state\r\n  const { id, name, bloodPressure, weight } = patientData\r\n\r\n  const [prescription, setPrescription] = useState('')\r\n  const [report, setReport] = useState('')\r\n  const [visitSummary, setVisitSummary] = useState('')\r\n  const [validated,setValidated] = useState(false)\r\n\r\n  const navigate = useNavigate()\r\n\r\n  \r\n  \r\n\r\n\r\n\r\n\r\n\r\n  const handleCheckUpPatient = async (e) => {\r\n    try {\r\n      const form = e.currentTarget\r\n      if (form.checkValidity() === false) {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        setValidated(true)\r\n        return\r\n      }\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n      const formData = {\r\n        patientId: id,\r\n        doctorName: doctor.name,\r\n        prescription,\r\n        report,\r\n        weight,\r\n        bloodPressure,\r\n        visitSummary,\r\n      }\r\n      const res = await axios.post('/api/v1/doctor/addPatientVisit', formData)\r\n      if (res.data.success) {\r\n        message.success(res.data.message)\r\n        navigate('/patients-for-checkup')\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error('Cannot Submit Patient Checkup Form, Something went wrong')\r\n    }\r\n    e.preventDefault()\r\n  }\r\n  return (\r\n    <>\r\n      <h3>Checkup Form</h3>\r\n\r\n      <Form onSubmit={handleCheckUpPatient} noValidate validated={validated}>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} className=\"col-12 col-md-3\" disabled controlId=\"Name\">\r\n            <Form.Label>Patient Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"  First Name\"\r\n              value={name}\r\n              disabled\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} className=\"col-12 col-md-3\" disabled controlId=\"formLastName\">\r\n            <Form.Label>Patient ID</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              placeholder=\"  Last Name\"\r\n              value={id}\r\n              disabled\r\n            />\r\n          </Form.Group>\r\n          <Form.Group as={Col} className=\"col-12 col-md-3\" disabled controlId=\"bloodPressure\">\r\n            <Form.Label>Blood Pressure</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"bloodPressure\"\r\n              placeholder=\"Patient Blood Pressure\"\r\n              value={bloodPressure}\r\n              disabled\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} className=\"col-12 col-md-3\" disabled controlId=\"weight\">\r\n            <Form.Label>Weight</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"weight\"\r\n              placeholder=\"Patient Weight\"\r\n              value={weight}\r\n              disabled\r\n            />\r\n          </Form.Group>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} className=\"col-12 mb-3\" controlId=\"formGridAddress1\">\r\n            <Form.Label>Summary / Analyze </Form.Label>\r\n            <Form.Control as={'textarea'} rows={3} name=\"summary\" placeholder=\"Summary\" value={visitSummary} onChange={(e)=> setVisitSummary(e.target.value)} />\r\n          </Form.Group>\r\n          <Form.Group as={Col} className=\"col-12\" controlId=\"formGridAddress1\">\r\n            <Form.Label>Prescription</Form.Label>\r\n            <Form.Control as={'textarea'} rows={3} name=\"prescription\" placeholder=\"Prescription\" value={prescription} onChange={(e)=> setPrescription(e.target.value)} />\r\n          </Form.Group>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} className=\"col-12 col-md-6\" controlId=\"formGridAddress2\">\r\n            <Form.Label>Report to be done</Form.Label>\r\n            <Form.Control type=\"text\" name=\"report\" placeholder=\"Report\" value={report} onChange={(e)=>setReport(e.target.value)} />\r\n          </Form.Group>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button type='submit'>Submit </Button>\r\n          </div>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CheckForm\r\n// {\r\n//   [x] patientId,\r\n//   [x] doctorName,\r\n//   [x] prescription,\r\n//   [x] report,\r\n//   [x] weight,\r\n//   [x] bloodPressure,\r\n//   [x] visitSummary,\r\n// }\r\n"],"names":["doctor","useSelector","state","loggedInRoleUserData","patientData","useLocation","id","name","bloodPressure","weight","_useState","useState","_useState2","_slicedToArray","prescription","setPrescription","_useState3","_useState4","report","setReport","_useState5","_useState6","visitSummary","setVisitSummary","_useState7","_useState8","validated","setValidated","navigate","useNavigate","handleCheckUpPatient","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","res","wrap","_context","prev","next","currentTarget","checkValidity","preventDefault","stopPropagation","abrupt","patientId","doctorName","axios","post","sent","data","success","message","t0","console","log","error","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","Form","onSubmit","noValidate","Row","className","Group","as","Col","disabled","controlId","Label","Control","type","placeholder","value","rows","onChange","target","Button"],"sourceRoot":""}