{"version":3,"file":"static/js/218.3e8214c8.chunk.js","mappings":"oUAOMA,EAAoB,WACxB,IAAMC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,qBAAqBA,oBAAoB,IACrFC,GAAkDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvDI,EAAiBF,EAAA,GAAEG,EAAoBH,EAAA,GAExCI,GAAWC,EAAAA,EAAAA,MAGXC,EAAoB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEFvB,EAAOwB,SAAQ,OAAxB,OAARN,EAAQG,EAAAI,KAAAJ,EAAAE,KAAA,EACIG,EAAAA,EAAMC,KAAK,uCAAwC,CAAET,SAAAA,IAAW,QAA5EC,EAAGE,EAAAI,MACDG,KAAKC,SACXpB,EAAqBU,EAAIS,KAAKA,MAC9BE,EAAAA,GAAQD,QAAQV,EAAIS,KAAKE,UAEzBA,EAAAA,GAAQC,MAAMZ,EAAIS,KAAKE,SACxBT,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAEDY,QAAQC,IAAGb,EAAAW,IAAO,yBAAAX,EAAAc,OAAA,GAAAlB,EAAA,mBAErB,kBAbyB,OAAAJ,EAAAuB,MAAA,KAAAC,UAAA,KAkB1B,OAJAC,EAAAA,EAAAA,YAAU,WACR1B,GACF,GAAG,KAGD2B,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CACRC,OAAK,EACLC,MAAO,CACLC,UAAW,QACXL,SAAA,EAEFD,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACC,UAAU,OAAMP,UACnBD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,8BAELhC,GAAqBA,EAAkBwC,OAAS,EAC/CxC,EAAkByC,KAAI,SAACC,GAAO,OAC5BX,EAAAA,EAAAA,KAAAY,EAAAA,SAAA,CAAAX,UACED,EAAAA,EAAAA,KAACa,EAAAA,EAAI,CAAAZ,UACHD,EAAAA,EAAAA,KAACa,EAAAA,EAAKC,KAAI,CAACN,UAAU,OAAMP,UACzBC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAAAF,SAAA,EACRD,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,OAAMP,SAAC,kBACrBD,EAAAA,EAAAA,KAAA,MAAAC,SAAKU,EAAQI,kBAGfb,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,gBACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAKU,EAAQK,iBAEfd,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,YACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAKU,EAAQM,aAEff,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAKU,EAAQO,oBAEfhB,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,UACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAK,IAAIkB,KAAKR,EAAQS,MAAMC,wBApBpBV,EAAQW,QAwBtBtB,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,6BAA4BP,UACzCD,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLC,QAAS,WACP,IAAMC,EAAc,CAClBC,GAAIf,EAAQgB,UACZC,KAAMjB,EAAQI,YACdE,OAAQN,EAAQM,OAChBC,cAAeP,EAAQO,eAEzB/C,EAAS,gBAAiB,CACxBR,MAAO,CAAE8D,YAAAA,IAEb,EACAjB,UAAU,UAASP,SACpB,4BAOR,KAGLD,EAAAA,EAAAA,KAACa,EAAAA,EAAI,CAACL,UAAU,0BAAyBP,UACvCD,EAAAA,EAAAA,KAACa,EAAAA,EAAKC,KAAI,CAAAb,SAAC,mCAMvB,EAEA,UAAe4B,EAAAA,KAAWrE,E","sources":["views/Doctor/PatientForCheckUp.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { message } from 'antd'\r\nimport { useSelector } from 'react-redux'\r\nimport { Button, Card, Container, Row } from 'react-bootstrap'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst PatientForCheckUp = () => {\r\n  const doctor = useSelector((state) => state.loggedInRoleUserData.loggedInRoleUserData)\r\n  const [patientForCheckUp, setPatientForCheckUp] = useState([])\r\n\r\n  const navigate = useNavigate()\r\n\r\n  //eslint-disable-next-line\r\n  const getPatientForCheckUp = async () => {\r\n    try {\r\n      const doctorId = await doctor.uniqueId\r\n      const res = await axios.post('/api/v1/doctor/getPatientToBeChecked', { doctorId })\r\n      if (res.data.success) {\r\n        setPatientForCheckUp(res.data.data)\r\n        message.success(res.data.message)\r\n      } else {\r\n        message.error(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getPatientForCheckUp()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Container\r\n        fluid\r\n        style={{\r\n          minHeight: '70vh',\r\n        }}\r\n      >\r\n        <Row className=\"ms-3\">\r\n          <h3>Patients to be Check Up</h3>\r\n        </Row>\r\n        {patientForCheckUp && patientForCheckUp.length > 0 ? (\r\n          patientForCheckUp.map((patient) => (\r\n            <>\r\n              <Card>\r\n                <Card.Body className=\"ms-3\">\r\n                  <Container>\r\n                    <div>\r\n                      <table key={patient._id}>\r\n                        <tr>\r\n                          <th className=\"pe-5\">Patient Name</th>\r\n                          <td>{patient.patientName}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                          <th>Department</th>\r\n                          <td>{patient.department}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <th>Weight</th>\r\n                          <td>{patient.weight}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <th>Blood Pressure</th>\r\n                          <td>{patient.bloodPressure}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <th>Time</th>\r\n                          <td>{new Date(patient.date).toLocaleString()}</td>\r\n                        </tr>\r\n                      </table>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <Button\r\n                        onClick={() => {\r\n                          const patientData = {\r\n                            id: patient.patientId,\r\n                            name: patient.patientName,\r\n                            weight: patient.weight,\r\n                            bloodPressure: patient.bloodPressure,\r\n                          }\r\n                          navigate('/checkup-form', {\r\n                            state: { patientData },\r\n                          })\r\n                        }}\r\n                        className=\"ms-auto\"\r\n                      >\r\n                        Check Patient\r\n                      </Button>\r\n                    </div>\r\n                  </Container>\r\n                </Card.Body>\r\n              </Card>\r\n            </>\r\n          ))\r\n        ) : (\r\n          <Card className=\"text-danger text-center\">\r\n            <Card.Body>No Patient to be checked</Card.Body>\r\n          </Card>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(PatientForCheckUp)\r\n"],"names":["PatientForCheckUp","doctor","useSelector","state","loggedInRoleUserData","_useState","useState","_useState2","_slicedToArray","patientForCheckUp","setPatientForCheckUp","navigate","useNavigate","getPatientForCheckUp","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","doctorId","res","wrap","_context","prev","next","uniqueId","sent","axios","post","data","success","message","error","t0","console","log","stop","apply","arguments","useEffect","_jsx","children","_jsxs","Container","fluid","style","minHeight","Row","className","length","map","patient","_Fragment","Card","Body","patientName","department","weight","bloodPressure","Date","date","toLocaleString","_id","Button","onClick","patientData","id","patientId","name","React"],"sourceRoot":""}