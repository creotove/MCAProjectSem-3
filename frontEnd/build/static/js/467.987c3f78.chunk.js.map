{"version":3,"file":"static/js/467.987c3f78.chunk.js","mappings":"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","sources":["views/Receptionist/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Col, Container, Form } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\nconst Profile = () => {\r\n  const user = useSelector((state) => state.user.user)\r\n  const [currentPassword, setCurrentPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const userDetails = async () => {\r\n    try {\r\n      const uniqueId = await user.uniqueId\r\n      const res = await axios.post(`/api/v1/user/selfDataAccToTheirId`, { uniqueId })\r\n      if (res.data.success) {\r\n        const data = res.data.data.user\r\n        console.log(data)\r\n        setName(data.name)\r\n        setEmail(data.email)\r\n        setMobileNumber(data.mobileNumber)\r\n        setAddress(data.address)\r\n        setProfile(res.data.data.profilePic)\r\n      } else {\r\n        message.error(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error(error.message)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n  const changePassword = async () => {\r\n    try {\r\n      if (newPassword !== confirmPassword) {\r\n        message.error('Password does not match')\r\n        return\r\n      }\r\n\r\n      const uniqueId = await user.uniqueId\r\n      const res = await axios.patch(`/api/v1/user/changePassword`, {\r\n        uniqueId,\r\n        password: currentPassword,\r\n        newPassword,\r\n      })\r\n      if (res.data.success) {\r\n        message.success(res.data.message)\r\n      } else {\r\n        message.error(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error(error.message)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    userDetails()\r\n  }, [])\r\n\r\n  const [name, setName] = useState(user.name)\r\n  const [email, setEmail] = useState(user.email)\r\n  const [mobileNumber, setMobileNumber] = useState()\r\n  const [address, setAddress] = useState()\r\n  const [profile, setProfile] = useState()\r\n\r\n  const convertBase64 = (file) => {\r\n    if (file.size > 100000) {\r\n      message.error(`File size cannot be more than 100kb`)\r\n      return\r\n    }\r\n    console.log(file.size)\r\n    return new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader()\r\n      fileReader.readAsDataURL(file)\r\n      fileReader.onload = () => {\r\n        resolve(fileReader.result)\r\n        setProfile(fileReader.result)\r\n      }\r\n      fileReader.onerror = (error) => {\r\n        reject(error)\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleProfileChange = async (e) => {\r\n    try {\r\n      e.preventDefault()\r\n      if (!name || !email || !address) {\r\n        message.error('Please fill all the fields')\r\n        return\r\n      }\r\n      const data = {\r\n        uniqueId: user.uniqueId,\r\n        profile,\r\n        name,\r\n        email,\r\n        address,\r\n      }\r\n\r\n      const res = await axios.post('/api/v1/user/uploadProfilePic', data)\r\n\r\n      if (res.data.success) {\r\n        message.success('Profile Updated Successfully')\r\n        window.location.reload()\r\n      } else {\r\n        message.error('Profile Not Updated')\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return loading ? (\r\n    <div className=\"d-flex justify-content-center align-items-center\">\r\n      <div className=\"spinner-border text-primary\" role=\"status\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Container fluid>\r\n      <Container>\r\n        <div className=\"d-flex flex-column flex-md-row flex-lg-row \">\r\n          <Card\r\n            className=\"col-12 col-md-7 col-lg-7 p-5 d-flex justify-content-center align-items-center my-2 my-md-0 my-lg-0\"\r\n            style={{\r\n              backgroundColor: '#EDF0FF',\r\n            }}\r\n          >\r\n            <Container\r\n              fluid\r\n              className=\"d-flex justify-content-evenly align-items-center flex-column flex-md-row\"\r\n            >\r\n              <div\r\n                className=\"bg-black bg-opacity-25 rounded-circle\"\r\n                style={{\r\n                  height: '150px',\r\n                  width: '150px',\r\n                    overflow: 'hidden',\r\n                }}\r\n              >\r\n                <img\r\n                  style={{\r\n                    height: '100%',\r\n                    width: '100%',\r\n                    objectFit: 'cover',\r\n                  }}\r\n                  src={profile}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"\">\r\n                <div>\r\n                  <div className=\"d-flex \">\r\n                    <img\r\n                      src=\"https://img.icons8.com/?size=256&id=83190&format=png\"\r\n                      style={{\r\n                        height: '20px',\r\n                        width: '20px',\r\n                        marginRight: '10px',\r\n                        filter: 'opacity(0.5)',\r\n                      }}\r\n                      alt=\"name\"\r\n                    />\r\n\r\n                    <div className=\"text-muted fs-6\">{user && user.name}</div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"d-flex \">\r\n                    <img\r\n                      src=\"https://img.icons8.com/?size=256&id=9730&format=png\"\r\n                      style={{\r\n                        height: '20px',\r\n                        width: '20px',\r\n                        marginRight: '10px',\r\n                        filter: 'opacity(0.5)',\r\n                      }}\r\n                      alt=\"phone number\"\r\n                    />\r\n                    <div className=\"text-muted fs-6\">{mobileNumber}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Container>\r\n          </Card>\r\n          <Card className=\"col-12 col-md-4 offset-md-1 offset-lg-1 col-lg-4 border-1 border-dark rounded-4\">\r\n            <Card.Header\r\n              className=\"border-1 border-dark rounded-top-4\"\r\n              style={{\r\n                backgroundColor: '#EDF0FF',\r\n              }}\r\n            >\r\n              Change Password\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Form autoComplete='off'>\r\n                <Form.Group as={Col} className=\"\" controlId=\"formPinCode\">\r\n                  <Form.Label className=\"fs-6\">Current Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Current Password\"\r\n                    size=\"sm\"\r\n                    onChange={(e) => setCurrentPassword(e.target.value)}\r\n                    value={currentPassword}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} className=\"\" controlId=\"formPinCode\">\r\n                  <Form.Label className=\"fs-6\">New</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"New Password\"\r\n                    size=\"sm\"\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                    value={newPassword}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} className=\"\" controlId=\"formPinCode\">\r\n                  <Form.Label className=\"fs-6\">Confirm Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Confirm Password\"\r\n                    size=\"sm\"\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    value={confirmPassword}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Button\r\n                  size=\"sm mt-2 d-flex w-100 align-items-center justify-content-center\"\r\n                  onClick={changePassword}\r\n                >\r\n                  Update Password\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </Container>\r\n      <Container className=\"mt-3\">\r\n        <Card className=\"border-1 border-dark rounded-4\">\r\n          <Card.Header\r\n            className=\"border-1 border-dark rounded-top-4\"\r\n            style={{\r\n              backgroundColor: '#EDF0FF',\r\n            }}\r\n          >\r\n            Profile Settings\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form className=\"row\" noValidate onSubmit={handleProfileChange}>\r\n              <Form.Group as={Col} className=\"col-12 col-md-6 col-lg-6\" controlId=\"formName\">\r\n                <Form.Label className=\"fs-6\">Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  size=\"sm\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  value={name}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col} className=\"col-12 col-md-6 col-lg-6\" controlId=\"formEmail\">\r\n                <Form.Label className=\"fs-6\">Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  size=\"sm\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group\r\n                as={Col}\r\n                className=\"col-12 col-md-6 col-lg-6\"\r\n                controlId=\"formMobileNumberr\"\r\n              >\r\n                <Form.Label className=\"fs-6\">Mobile Number</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Mobile Number\"\r\n                  size=\"sm\"\r\n                  onChange={(e) => setMobileNumber(e.target.value)}\r\n                  value={mobileNumber}\r\n                  disabled\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col} className=\"col-12 col-md-6 col-lg-6\" controlId=\"formCity\">\r\n                <Form.Label className=\"fs-6\">Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Address\"\r\n                  size=\"sm\"\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                  value={address}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col} className=\"col-12 col-md-6 col-lg-6\" controlId=\"formImage\">\r\n                <Form.Label className=\"fs-6\">Image</Form.Label>\r\n                <Form.Control\r\n                  type=\"file\"\r\n                  placeholder=\"Image\"\r\n                  size=\"sm\"\r\n                  onChange={(e) => convertBase64(e.target.files[0])}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <Container>\r\n                <Button size=\"sm\" type=\"submit\" className=\"mt-2 d-flex ms-auto\">\r\n                  Update Profile\r\n                </Button>\r\n              </Container>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n"],"names":["user","useSelector","state","_useState","useState","_useState2","_slicedToArray","currentPassword","setCurrentPassword","_useState3","_useState4","newPassword","setNewPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","loading","setLoading","userDetails","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","uniqueId","res","data","wrap","_context","prev","next","sent","axios","post","success","console","log","setName","name","setEmail","email","setMobileNumber","mobileNumber","setAddress","address","setProfile","profilePic","message","error","t0","finish","stop","apply","arguments","changePassword","_ref2","_callee2","_context2","abrupt","patch","password","useEffect","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","profile","handleProfileChange","_ref3","_callee3","e","_context3","preventDefault","window","location","reload","_x","_jsx","className","children","role","_jsxs","Container","fluid","Card","style","backgroundColor","height","width","overflow","objectFit","src","alt","marginRight","filter","Header","Body","Form","autoComplete","Group","as","Col","controlId","Label","Control","type","placeholder","size","onChange","target","value","required","Button","onClick","noValidate","onSubmit","disabled","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","convertBase64","files"],"sourceRoot":""}