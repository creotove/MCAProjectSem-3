{"version":3,"file":"static/js/343.6e6c561e.chunk.js","mappings":"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","sources":["views/Receptionist/AddNewPatient.js"],"sourcesContent":["import React from 'react'\r\nimport { message } from 'antd'\r\nimport axios from 'axios'\r\nimport { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\nconst AddNewPatient = () => {\r\n  const [name, setName] = useState('')\r\n  const [uniqueId, setUniqueId] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [gender, setGender] = useState('Male')\r\n  const [age, setAge] = useState('')\r\n  const [mobileNumber, setMobileNumber] = useState('')\r\n  const [bloodGroup, setBloodGroup] = useState('A b postive')\r\n  const [address, setAddress] = useState('')\r\n  const [zip, setZip] = useState('')\r\n  const [vaccinated, setVaccinated] = useState(false)\r\n\r\n  const [validated, setValidated] = useState(false)\r\n\r\n  const handleSubmit = async (e) => {\r\n    try {\r\n      const form = e.currentTarget\r\n      if (form.checkValidity() === false) {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        setValidated(true)\r\n        return\r\n      }\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n      const formData = {\r\n        name,\r\n        gender,\r\n        uniqueId,\r\n        email,\r\n        mobileNumber,\r\n        vaccinated,\r\n        age,\r\n        bloodGroup,\r\n        address,\r\n        zip,\r\n      }\r\n      console.log(formData)\r\n      const res = await axios.post('/api/v1/receptionist/addNewPatient', formData)\r\n      if (res.data.success) {\r\n        message.success('Patient Added successfull')\r\n        setName('')\r\n        setUniqueId('')\r\n        setEmail('')\r\n        setGender('Male')\r\n        setAge('')\r\n        setMobileNumber('')\r\n        setBloodGroup('A b postive')\r\n        setAddress('')\r\n        setZip('')\r\n      } else {\r\n        message.error(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      message.error('Error in adding Patient')\r\n      console.log(error)\r\n    }\r\n    e.preventDefault()\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"container justify-content-center d-flex mt-5 w-100 \">\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Row className=\"mb-3\">\r\n            <Form.Group\r\n              as={Col}\r\n              className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n              controlId=\"formFirstName\"\r\n            >\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                onChange={(e) => {\r\n                  setName(e.target.value)\r\n                  // setEmail(`${firstName}${mobileNumber}@hms`)\r\n                }}\r\n                value={name}\r\n                required\r\n              />\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              as={Col}\r\n              className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n              controlId=\"formMobileNumber\"\r\n            >\r\n              <Form.Label>Mobile Number</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter Mobile Number\"\r\n                onChange={(e) => setMobileNumber(e.target.value)}\r\n                value={mobileNumber}\r\n                required\r\n              />\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              as={Col}\r\n              className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n              controlId=\"formGender\"\r\n            >\r\n              <Form.Label>Gender</Form.Label>\r\n              <Form.Select onChange={(e) => setGender(e.target.value)} value={gender}>\r\n                <option>Male</option>\r\n                <option>Female</option>\r\n              </Form.Select>\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Row>\r\n\r\n          <Row className=\"mb-3\">\r\n            <Form.Group\r\n              as={Col}\r\n              className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n              controlId=\"formAge\"\r\n            >\r\n              <Form.Label>Age</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Age\"\r\n                onChange={(e) => setAge(e.target.value)}\r\n                value={age}\r\n                required\r\n              />\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              as={Col}\r\n              className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n              controlId=\"formLastName\"\r\n            >\r\n              <Form.Label>Unique Id</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Press Any Key\"\r\n                className=\"disabled\"\r\n                onChange={(e) => setUniqueId(`AMN-PAT-${mobileNumber.split('').slice(7).join('')}`)}\r\n                value={uniqueId}\r\n                required\r\n              />\r\n              {/* <Form.Control type=\"text\" placeholder=\"Enter Last Name\" value={email} required /> */}\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              as={Col}\r\n              className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n              controlId=\"formBloodGroup\"\r\n            >\r\n              <Form.Label>Blood Group</Form.Label>\r\n              <Form.Select\r\n                onChange={(e) => setBloodGroup(e.target.value)}\r\n                value={bloodGroup}\r\n                required\r\n              >\r\n                <option>A b postive</option>\r\n                <option>A b negative</option>\r\n                <option>B postive</option>\r\n                <option>B Negative</option>\r\n                <option>ABO Blood Group System</option>\r\n                <option>Blood Group O</option>\r\n                <option>Blood Group A</option>\r\n                <option>Blood Group A b</option>\r\n                <option>O Negative</option>\r\n                <option>O Positive</option>\r\n              </Form.Select>\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Row>\r\n\r\n          <Row className=\"mb-3\">\r\n            <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Enter Address Eg. 1234 Main St\"\r\n                onChange={(e) => setAddress(e.target.value)}\r\n                value={address}\r\n                required\r\n              />\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              as={Col}\r\n              className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n              controlId=\"formGender\"\r\n            >\r\n              <Form.Label>Vaccinated</Form.Label>\r\n              <Form.Select onChange={(e) => setVaccinated(e.target.value)} value={vaccinated}>\r\n                <option value={false}>No</option>\r\n                <option value={true}>Yes</option>\r\n              </Form.Select>\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Row>\r\n\r\n          <Row className=\"mb-3\">\r\n            <Form.Group\r\n              as={Col}\r\n              controlId=\"formGridZip\"\r\n              className=\"col-4 col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n            >\r\n              <Form.Label>Zip</Form.Label>\r\n              <Form.Control\r\n                onChange={(e) => setZip(e.target.value)}\r\n                value={zip}\r\n                required\r\n                placeholder=\"Enter Zip\"\r\n              />\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              as={Col}\r\n              controlId=\"emailId\"\r\n              className=\"col-4 col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n            >\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value={email}\r\n                required\r\n                placeholder=\"Enter Email\"\r\n              />\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Row>\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"col-3 col-sm-12 col-lg-3 col-xs-12 col-md-3 col-12 offset-md-9\"\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddNewPatient\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","uniqueId","setUniqueId","_useState5","_useState6","email","setEmail","_useState7","_useState8","gender","setGender","_useState9","_useState10","age","setAge","_useState11","_useState12","mobileNumber","setMobileNumber","_useState13","_useState14","bloodGroup","setBloodGroup","_useState15","_useState16","address","setAddress","_useState17","_useState18","zip","setZip","_useState19","_useState20","vaccinated","setVaccinated","_useState21","_useState22","validated","setValidated","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","res","wrap","_context","prev","next","currentTarget","checkValidity","preventDefault","stopPropagation","abrupt","console","log","axios","post","sent","data","success","message","error","t0","stop","_x","apply","arguments","_jsx","_Fragment","children","className","_jsxs","Form","noValidate","onSubmit","autoComplete","Row","Group","as","Col","controlId","Label","Control","type","placeholder","onChange","target","value","required","Feedback","Select","concat","split","slice","join","Button","variant"],"sourceRoot":""}