{"version":3,"file":"static/js/706.f9609ecc.chunk.js","mappings":"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","sources":["views/pages/Register.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport docImage from '../../assets/images/aboutDoctor.png';\r\n\r\nimport { Form } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { message } from 'antd';\r\n\r\n\r\nconst Register = () => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [validated, setValidated] = useState(false);\r\n    const navigate = useNavigate()\r\n    \r\n    \r\n//checking if user is signed in or not if already signed in then redirectiong to its own modlue\r\n// const alreadySignedIn = () => {\r\n//     if (localStorage.getItem(\"token\") === null) {\r\n//         if (localStorage.getItem(\"isAdmin\")) {\r\n//             navigate(\"/admin\");\r\n//         }\r\n//         if (localStorage.getItem(\"isReceptionist\")) {\r\n//             navigate(\"/receptionist\");\r\n//         }\r\n//         if (localStorage.getItem(\"isPatient\")) {\r\n//             navigate(\"/patientportal\");\r\n//         }\r\n//         else{\r\n//             navigate(\"/login\")\r\n//         }\r\n//     }\r\n\r\n\r\n// }\r\n// useEffect(() => {\r\n//     alreadySignedIn()\r\n// }, [])\r\n\r\n\r\nconst alreadySignedIn = () => {\r\n    if (localStorage.getItem(\"token\") === null) {\r\n      // console.log(\"token there\");\r\n    }\r\n    else {\r\n      navigate(\"/login\")\r\n    }\r\n    if (localStorage.getItem(\"isAdmin\")) {\r\n      navigate(\"/spinner\");\r\n    }\r\n    if (localStorage.getItem(\"isReceptionist\")) {\r\n      navigate(\"/spinner\");\r\n    }\r\n    if (localStorage.getItem(\"isPatient\")) {\r\n      navigate(\"/spinner\");\r\n    }\r\n\r\n\r\n\r\n  }\r\n  useEffect(() => {\r\n    alreadySignedIn()\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n\r\n        try {\r\n            const form = e.currentTarget;\r\n            if (form.checkValidity() === false) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                setValidated(true);\r\n                return\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            const formData = {\r\n                firstName,\r\n                lastName,\r\n                email,\r\n                password,\r\n\r\n            };\r\n            // const finalData = { ...formData }\r\n            const res = await axios.post('/api/v1/user/register', formData)\r\n            if (res.data.success) {\r\n                message.success('Register successfull')\r\n                navigate('/login')\r\n            }\r\n            else {\r\n                message.error(res.data.message)\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            message.error(\"Something went wrong\")\r\n            console.log(error);\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n\r\n        <section className=\"vh-100 d-flex align-items-center justify-content-center flex-column\">\r\n            <div className=\"container h-custom\">\r\n                <div className=\"row d-flex justify-content-center align-items-center h-100 shadow-lg rounded py-5\">\r\n                    <div className=\"col-md-9 col-lg-6 col-xl-5\">\r\n                        <img src={docImage} className=\"img-fluid\" alt=\"\" />\r\n                    </div>\r\n                    <div className=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\r\n                        <Form noValidate validated={validated} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 mb-4\">\r\n                                    <div className=\"form-outline\">\r\n                                        <Form.Group controlId=\"firstName\">\r\n                                            <Form.Label>First name</Form.Label>\r\n                                            <Form.Control\r\n                                                required\r\n                                                type=\"text\"\r\n                                                placeholder=\"First name\"\r\n                                                className=\"form-control\" value={firstName} onChange={(e) => setFirstName(e.target.value)}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 mb-4\">\r\n                                    <div className=\"form-outline\">\r\n                                        <Form.Group controlId=\"lastName\">\r\n                                            <Form.Label>Last name</Form.Label>\r\n                                            <Form.Control\r\n                                                required\r\n                                                type=\"text\"\r\n                                                placeholder=\"Last name\"\r\n                                                className=\"form-control\" value={lastName} onChange={(e) => setLastName(e.target.value)}\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-outline mb-4\">\r\n                                <Form.Group controlId=\"emailAddress\">\r\n                                    <Form.Label>Email address</Form.Label>\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"text\"\r\n                                        placeholder=\"Email Address\"\r\n                                        className=\"form-control\" value={email} onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"form-outline mb-4\">\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        autoComplete=\"on\"\r\n                                        className=\"form-control\" value={password} onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </div>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-block mb-4\" >\r\n                                Sign up\r\n                            </button>\r\n                            <div className=\"text-center\">\r\n                                <p className=\"small fw-bold mt-2 pt-1 mb-0\">Don&apos;t have an account? <Link to=\"/login\" className=\"link-danger\">Login</Link></p>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Register\r\n\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","firstName","setFirstName","_useState3","_useState4","lastName","setLastName","_useState5","_useState6","email","setEmail","_useState7","_useState8","password","setPassword","_useState9","_useState10","validated","setValidated","navigate","useNavigate","useEffect","localStorage","getItem","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","res","wrap","_context","prev","next","currentTarget","checkValidity","preventDefault","stopPropagation","abrupt","axios","post","sent","data","success","message","error","t0","console","log","stop","_x","apply","arguments","_jsx","className","children","_jsxs","src","docImage","alt","Form","noValidate","onSubmit","autoComplete","Group","controlId","Label","Control","required","type","placeholder","value","onChange","target","Feedback","Link","to"],"sourceRoot":""}