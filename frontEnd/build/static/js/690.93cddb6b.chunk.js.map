{"version":3,"file":"static/js/690.93cddb6b.chunk.js","mappings":"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","sources":["views/pages/Login.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport docImage from '../../assets/images/aboutDoctor.png'\r\nimport { Form } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { message } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setUser } from '../../features/userSlice'\r\n\r\nconst Login = () => {\r\n  const [uniqueId, setUniqueId] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const [validated, setValidated] = useState(false)\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  if (localStorage.getItem('token')) {\r\n    return navigate('/')\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    try {\r\n      const form = e.currentTarget\r\n      if (form.checkValidity() === false) {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        setValidated(true)\r\n\r\n        return\r\n      }\r\n\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n      const formData = { uniqueId, password }\r\n\r\n      const res = await axios.post('/api/v1/user/login', formData)\r\n      if (res.data.success) {\r\n        localStorage.setItem('token', res.data.token)\r\n        message.success('Login Successfully')\r\n        dispatch(setUser(res.data.data))\r\n        if (res.data.data.role === 'admin') {\r\n          navigate('/admin')\r\n          window.location.reload()\r\n        }\r\n        if (res.data.data.role === 'doctor') {\r\n          navigate('/doctor')\r\n          window.location.reload()\r\n        }\r\n        if (res.data.data.role === 'receptionist') {\r\n          navigate('/receptionist')\r\n          window.location.reload()\r\n        }\r\n        if (res.data.data.role === 'patient') {\r\n          navigate('/patient')\r\n          window.location.reload()\r\n        }\r\n      } else {\r\n        message.error(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error('something went wrong')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"vh-100 d-flex align-items-center justify-content-center flex-column\">\r\n        <div className=\"container h-custom\">\r\n          <div className=\"row d-flex justify-content-center align-items-center h-100 shadow-lg rounded py-5\">\r\n            <div className=\"col-md-9 col-lg-6 col-xl-5\">\r\n              <img src={docImage} className=\"img-fluid\" alt=\"\" />\r\n            </div>\r\n            <div className=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\r\n              <Form noValidate validated={validated} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                <div className=\"form-outline mb-4\">\r\n                  <Form.Group controlId=\"validationCustom01\">\r\n                    <Form.Label>Unique Id</Form.Label>\r\n                    <Form.Control\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Unique Id\"\r\n                      className=\"form-control\"\r\n                      value={uniqueId}\r\n                      onChange={(e) => setUniqueId(e.target.value)}\r\n                      name=\"uniqueId\"\r\n                    />\r\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"form-outline mb-3\">\r\n                  <Form.Group controlId=\"validationCustom01\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      required\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      className=\"form-control\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      name=\"password\"\r\n                    />\r\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </div>\r\n                {/* <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <a href=\"#!\" className=\"text-body\">\r\n                    Forgot password?\r\n                  </a>\r\n                </div> */}\r\n                <div className=\"text-center text-lg-start mt-4 pt-2\">\r\n                  <button type=\"submit\" className=\"btn btn-primary btn-block mb-4\">\r\n                    Login\r\n                  </button>\r\n                  {/* <div className=\"text-center\">\r\n                    <p className=\"small fw-bold mt-2 pt-1 mb-0\">\r\n                      Don&aps;t have an account?{' '}\r\n                      <Link to=\"/register\" className=\"link-danger\">\r\n                        Register\r\n                      </Link>\r\n                    </p>\r\n                  </div> */}\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nexport default Login\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","uniqueId","setUniqueId","_useState3","_useState4","password","setPassword","_useState5","_useState6","validated","setValidated","dispatch","useDispatch","navigate","useNavigate","localStorage","getItem","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","res","wrap","_context","prev","next","currentTarget","checkValidity","preventDefault","stopPropagation","abrupt","axios","post","sent","data","success","setItem","token","message","setUser","role","window","location","reload","error","t0","console","log","stop","_x","apply","arguments","_jsx","_Fragment","children","className","_jsxs","src","docImage","alt","Form","noValidate","onSubmit","autoComplete","Group","controlId","Label","Control","required","type","placeholder","value","onChange","target","name","Feedback"],"sourceRoot":""}