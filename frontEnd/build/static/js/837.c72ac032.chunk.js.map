{"version":3,"file":"static/js/837.c72ac032.chunk.js","mappings":"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","sources":["views/Receptionist/ExistingPatient.js"],"sourcesContent":["import { message } from 'antd'\r\nimport axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\nimport { Row, Col, Button } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport React from 'react'\r\n\r\nconst ExistingPatient = () => {\r\n  const [searchMobileNumber, setSearchMobileNumber] = useState()\r\n  const [departmentDoctors, setDepartmentDoctors] = useState([])\r\n  const [doctorId, setDoctorId] = useState('')\r\n\r\n  const [validated, setValidated] = useState(false)\r\n\r\n  const [patientId, setPatientId] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [gender, setGender] = useState('Male')\r\n  const [department, setDepartment] = useState('')\r\n  const [weight, setWeight] = useState(0)\r\n  const [bloodPressure, setBloodPressure] = useState(0)\r\n\r\n  const [doctorName, setDoctorName] = useState('')\r\n\r\n  const getPatientData = async (e) => {\r\n    try {\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n      const res = await axios.post('/api/v1/receptionist/getPatientData', { searchMobileNumber })\r\n      if (res.data.success) {\r\n        setPatientId(res.data.data.uniqueId)\r\n        setName(res.data.data.name)\r\n        setGender(res.data.data.gender)\r\n        message.success('Patient Details Fetched Successfully')\r\n      } else {\r\n        message.error('something went wrong')\r\n      }\r\n    } catch (error) {\r\n      message.error('Could not find the Patient')\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const getDepartmentOfDoctor = async (department) => {\r\n    try {\r\n      const res = await axios.post('/api/v1/receptionist/getDepartmentOfDoctor', { department })\r\n      if (res.data.success) {\r\n        setDepartmentDoctors(res.data.data)\r\n        setDoctorId(res.data.data[0].uniqueId)\r\n        message.success('Doctor Name Fetched Successfully')\r\n      } else {\r\n        message.error('something went wrong')\r\n      }\r\n    } catch (error) {\r\n      message.error('Could not find the Doctor')\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const addforCheckUp = async (e) => {\r\n    try {\r\n      const form = e.currentTarget\r\n      if (form.checkValidity() === false) {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        setValidated(true)\r\n        return\r\n      }\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n\r\n      const formData = { name, department, doctorName, weight, bloodPressure, patientId, doctorId }\r\n      const res = await axios.post('/api/v1/receptionist/addForCheckUp', formData)\r\n      if (res.data.success) {\r\n        message.success('Patient Added for CheckUp Successfully')\r\n        setPatientId('')\r\n        setName('')\r\n        setGender('')\r\n        setDepartment('')\r\n        setWeight(0)\r\n        setBloodPressure(0)\r\n        setDoctorName('')\r\n        setDepartmentDoctors([])\r\n      } else {\r\n        message.error(res.data.message)\r\n      }\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n    } catch (error) {\r\n      message.error(error.response.data.message)\r\n      console.log(error)\r\n    }\r\n    e.preventDefault()\r\n  }\r\n  useEffect(() => {\r\n    if (departmentDoctors.length > 0) {\r\n      setDoctorName(departmentDoctors[0].name)\r\n    }\r\n  }, [department, departmentDoctors])\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Form id=\"searchPatient\" name=\"searchPatient\" autoComplete=\"off\" onSubmit={getPatientData}>\r\n          <Row className=\"mb-3\">\r\n            <Form.Group\r\n              as={Col}\r\n              className=\"d-flex offset-md-7 col-md-5 col-sm-12 col-sm-12\"\r\n              controlId=\"formGridEmail\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => setSearchMobileNumber(e.target.value)}\r\n                value={searchMobileNumber}\r\n                className=\"me-2\"\r\n                placeholder=\"Patient Mobile Number\"\r\n              />\r\n              <Button onClick={getPatientData}>Search</Button>\r\n            </Form.Group>\r\n          </Row>\r\n        </Form>\r\n        <div className=\"container-fluid\">\r\n          <Form noValidate validated={validated} onSubmit={addforCheckUp} autoComplete=\"off\">\r\n            <Row className=\"mb-3  col-md-4 col-sm-12 col-sm-12\">\r\n              <Form.Group as={Col} className=\"\" controlId=\"formGridEmail\">\r\n                <Form.Label>Patient Id</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Patient Id\" value={patientId} disabled />\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Row className=\"mb-3\">\r\n              <Form.Group\r\n                as={Col}\r\n                className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n                controlId=\"formFirstName\"\r\n              >\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"  First Name\" value={name} disabled />\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                as={Col}\r\n                className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n                controlId=\"formGender\"\r\n              >\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Gender\" value={gender} disabled />\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Row className=\"mb-3\">\r\n              <Form.Group\r\n                as={Col}\r\n                className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n                controlId=\"formWeight\"\r\n              >\r\n                <Form.Label>Weight</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Enter Weight\"\r\n                  value={weight}\r\n                  onChange={(e) => setWeight(e.target.value)}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                as={Col}\r\n                className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n                controlId=\"formBloodPressure\"\r\n              >\r\n                <Form.Label>Blood Pressure</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Enter Blood Pressure\"\r\n                  value={bloodPressure}\r\n                  onChange={(e) => setBloodPressure(e.target.value)}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Row className=\"mb-3\">\r\n              <Form.Group\r\n                as={Col}\r\n                className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n                controlId=\"formDepartment\"\r\n              >\r\n                <Form.Label>Department</Form.Label>\r\n                <Form.Select\r\n                  defaultValue=\"Eye Care\"\r\n                  onChange={(e) => {\r\n                    setDepartment(e.target.value)\r\n                    getDepartmentOfDoctor(e.target.value)\r\n                  }}\r\n                >\r\n                  <option>Eye Care</option>\r\n                  <option>Psychotherapy</option>\r\n                  <option>Primary Care</option>\r\n                  <option>Dental Care</option>\r\n                  <option>Orthopedic</option>\r\n                  <option>Cardiology</option>\r\n                  <option>Gynecology</option>\r\n                  <option>Neurology</option>\r\n                  <option>Dermatologists</option>\r\n                  <option>Nutritionists</option>\r\n                  <option>Physical Therapists</option>\r\n                </Form.Select>\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                as={Col}\r\n                className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n                controlId=\"formdepartmentDoctors\"\r\n              >\r\n                <Form.Label\r\n                  style={{\r\n                    whiteSpace: 'nowrap',\r\n                  }}\r\n                >\r\n                  Doctor Available in Department\r\n                </Form.Label>\r\n                <Form.Select\r\n                  defaultValue={departmentDoctors.length > 0 ? departmentDoctors[0].name : ''}\r\n                  onChange={(e) => {\r\n                    setDoctorName(e.target.value)\r\n                  }}\r\n                >\r\n                  {departmentDoctors && departmentDoctors.length === 0 ? (\r\n                    <option disabled>No Doctors found</option>\r\n                  ) : (\r\n                    departmentDoctors &&\r\n                    departmentDoctors.map((docName, idx) => (\r\n                      <option key={idx} value={docName}>\r\n                        Dr. {docName.name}\r\n                      </option>\r\n                    ))\r\n                  )}\r\n                </Form.Select>\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                as={Col}\r\n                className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n                controlId=\"formdepartmentDoctors\"\r\n              >\r\n                <Form.Label\r\n                  style={{\r\n                    whiteSpace: 'nowrap',\r\n                  }}\r\n                >\r\n                  Doctor Id\r\n                </Form.Label>\r\n                <Form.Select\r\n                  defaultValue={departmentDoctors.length > 0 ? departmentDoctors[0].uniqueId : ''}\r\n                  onChange={(e) => {\r\n                    setDoctorId(e.target.value)\r\n                  }}\r\n                  disabled\r\n                >\r\n                  {departmentDoctors && departmentDoctors.length === 0 ? (\r\n                    <option disabled>No Doctors found</option>\r\n                  ) : (\r\n                    departmentDoctors &&\r\n                    departmentDoctors.map((docId, idx) => (\r\n                      <option key={idx} value={docId}>\r\n                        {docId.uniqueId}\r\n                      </option>\r\n                    ))\r\n                  )}\r\n                </Form.Select>\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Button\r\n              variant=\"primary\"\r\n              className=\"col-3 col-sm-12 col-lg-3 col-xs-12 col-md-3 col-12 offset-md-9\"\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExistingPatient\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","searchMobileNumber","setSearchMobileNumber","_useState3","_useState4","departmentDoctors","setDepartmentDoctors","_useState5","_useState6","doctorId","setDoctorId","_useState7","_useState8","validated","setValidated","_useState9","_useState10","patientId","setPatientId","_useState11","_useState12","name","setName","_useState13","_useState14","gender","setGender","_useState15","_useState16","department","setDepartment","_useState17","_useState18","weight","setWeight","_useState19","_useState20","bloodPressure","setBloodPressure","_useState21","_useState22","doctorName","setDoctorName","getPatientData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","res","wrap","_context","prev","next","preventDefault","stopPropagation","axios","post","sent","data","success","uniqueId","message","error","t0","console","log","stop","_x","apply","arguments","getDepartmentOfDoctor","_ref2","_callee2","_context2","_x2","addforCheckUp","_ref3","_callee3","formData","_context3","currentTarget","checkValidity","abrupt","response","_x3","useEffect","length","_jsx","_Fragment","children","_jsxs","className","Form","id","autoComplete","onSubmit","Row","Group","as","Col","controlId","Control","type","onChange","target","value","placeholder","Button","onClick","noValidate","Label","disabled","Feedback","Select","defaultValue","style","whiteSpace","map","docName","idx","docId","variant"],"sourceRoot":""}